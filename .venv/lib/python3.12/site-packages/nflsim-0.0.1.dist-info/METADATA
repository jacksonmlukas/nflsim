Metadata-Version: 2.4
Name: nflsim
Version: 0.0.1
Summary: State-of-the-art NFL game simulator skeleton
Author: You
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pandas>=2.2
Requires-Dist: pyarrow>=16.0
Requires-Dist: nfl-data-py>=0.3
Requires-Dist: duckdb>=1.0
Requires-Dist: numpy>=1.26
Requires-Dist: scikit-learn>=1.4
Requires-Dist: typer>=0.12
Requires-Dist: pydantic>=2.7
Requires-Dist: pydantic-settings>=2.1
Requires-Dist: pandera>=0.20
Requires-Dist: mkdocs-material>=9.5
Requires-Dist: rich>=13.7
Provides-Extra: dev
Requires-Dist: pytest>=8.0; extra == "dev"
Requires-Dist: pre-commit>=3.7; extra == "dev"
Requires-Dist: mypy>=1.10; extra == "dev"
Requires-Dist: ruff>=0.6; extra == "dev"
Requires-Dist: black>=24.8; extra == "dev"
Dynamic: license-file

# nflsim — NFL Game Simulation & Forecasting Skeleton

This repo is a production-grade skeleton for a **state-of-the-art NFL game simulator** using only free/public data.

**What’s here**
- Clean `src/` package layout
- Partitioned Parquet data lake + DuckDB views
- Configs via YAML overlays
- Pipelines for data → features → models → sim → eval (stubs)
- Testing, linting, docs scaffolding

## Quick start
```bash
# (1) create venv and install (uv or pip)
pip install -e .
# (2) run CLI help
nflsim --help
```

## Structure
- `configs/` configuration overlays (env/season/model/sim)
- `data/` local data lake (raw → interim → processed → features)
- `src/nflsim/` package code (ETL, features, models, simulator)
- `tests/` unit + e2e scaffolding
- `docs/` mkdocs site scaffold

> All implementation files are intentionally **stubs**. Fill them in as you build.
